(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{283:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),i=(n(0),n(295)),s={id:"staking-delegator-reading-contract-states",title:"Reading Contract States",keywords:["staking","ssn","smart contract","zilliqa","delegator","contract states"],description:"Reading contract states"},o={id:"staking/phase1/delegator/staking-delegator-reading-contract-states",isDocsHomePage:!1,title:"Reading Contract States",description:"Reading contract states",source:"@site/docs/staking/phase1/delegator/staking-delegator-reading-contract-state.md",permalink:"/docs/staking/phase1/delegator/staking-delegator-reading-contract-states",editUrl:"https://github.com/Zilliqa/dev-portal/tree/master/docs/staking/phase1/delegator/staking-delegator-reading-contract-state.md",sidebar:"StakingSidebar",previous:{title:"Overview",permalink:"/docs/staking/phase1/delegator/staking-delegator-overview"},next:{title:"Smart Contract Operations",permalink:"/docs/staking/phase1/delegator/staking-delegator-operations"}},l=[{value:"Getting the Current List of SSNs",id:"getting-the-current-list-of-ssns",children:[{value:"Inputs",id:"inputs",children:[]},{value:"Output",id:"output",children:[]}]},{value:"Getting the List of Delegators for a SSN",id:"getting-the-list-of-delegators-for-a-ssn",children:[{value:"Inputs",id:"inputs-1",children:[]},{value:"Output",id:"output-1",children:[]}]},{value:"Getting the Delegator&#39;s Buffered Deposit",id:"getting-the-delegators-buffered-deposit",children:[{value:"Inputs",id:"inputs-2",children:[]},{value:"Output",id:"output-2",children:[]}]},{value:"Getting the Delegator&#39;s Stake Amount",id:"getting-the-delegators-stake-amount",children:[{value:"Inputs",id:"inputs-3",children:[]},{value:"Output",id:"output-3",children:[]}]},{value:"Getting the Delegator&#39;s Stake Reward",id:"getting-the-delegators-stake-reward",children:[]},{value:"Getting the Delegator&#39;s Reward History",id:"getting-the-delegators-reward-history",children:[]},{value:"Getting the Delegator&#39;s Pending Stake Withdrawal Request",id:"getting-the-delegators-pending-stake-withdrawal-request",children:[{value:"Inputs",id:"inputs-4",children:[]},{value:"Output",id:"output-4",children:[]}]},{value:"Getting Delegation History",id:"getting-delegation-history",children:[]}],c={rightToc:l};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"In this section, we will cover a few read operations that are useful from a delegator's perspective. These are:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-the-current-list-of-ssns"}),"Current list of SSNs")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-the-list-of-delegators-for-a-ssn"}),"List of delegators for a SSN")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-the-delegators-buffered-deposit"}),"Delegator's buffered deposit")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-the-delegators-stake-amount"}),"Delegator's stake amount")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-the-delegators-stake-reward"}),"Delegator's stake reward")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-the-delegators-reward-history"}),"Delegator's reward history")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-the-delegators-pending-stake-withdrawal-request"}),"Delegator's pending stake withdrawal request")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"#getting-delegation-history"}),"Delegation history"))),Object(i.b)("p",null,"In order to read the above information from the smart contract, you should use the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://apidocs.zilliqa.com/#getsmartcontractsubstate"}),Object(i.b)("inlineCode",{parentName:"a"},"GetSmartContractSubState"))," API by querying it from the ",Object(i.b)("inlineCode",{parentName:"p"},"ssnlist")," smart contract."),Object(i.b)("h2",{id:"getting-the-current-list-of-ssns"},"Getting the Current List of SSNs"),Object(i.b)("h3",{id:"inputs"},"Inputs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Address of ",Object(i.b)("inlineCode",{parentName:"li"},"ssnlist")," smart contract"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ssnlist"))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'curl -d \'{\n    "id": "1",\n    "jsonrpc": "2.0",\n    "method": "GetSmartContractSubState",\n    "params": ["<ssnlist contract address>","ssnlist",[]]\n}\' -H "Content-Type: application/json" -X POST "<api endpoint>"\n')),Object(i.b)("h3",{id:"output"},"Output"),Object(i.b)("p",null,"Map of SSN with the corresponding SSN data type"),Object(i.b)("p",null,"Map SSN address -> ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Zilliqa/staking-contract/tree/spec/contracts#data-types"}),"SSN data type")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n   "id":"1",\n   "jsonrpc":"2.0",\n   "result":{\n      "ssnlist":{\n         "<ssn addr>":{\n            "argtypes":[\n               \n            ],\n            "arguments":[\n               {\n                  "argtypes":[\n                     \n                  ],\n                  "arguments":[\n                     \n                  ],\n                  "constructor":"<ActiveStatus>"\n               },\n               "<StakeAmount>",\n               "<StakeRewards>",\n               "<name of ssn>",\n               "<staking api url>",\n               "<api url>",\n               "<buffered deposit>",\n               "<comission rate>",\n               "<commssion rewards>",\n               "<ssn commission receiving address>"\n            ]\n         }\n      }\n   }\n}\n')),Object(i.b)("h2",{id:"getting-the-list-of-delegators-for-a-ssn"},"Getting the List of Delegators for a SSN"),Object(i.b)("h3",{id:"inputs-1"},"Inputs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Address of ",Object(i.b)("inlineCode",{parentName:"li"},"ssnlist")," smart contract"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"ssn_deleg_amt")),Object(i.b)("li",{parentName:"ul"},"Address of SSN")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl -d \'{\n    "id": "1",\n    "jsonrpc": "2.0",\n    "method": "GetSmartContractSubState",\n    "params": ["<ssnlist contract addresss>","ssn_deleg_amt",["0x<address of SSN>"]]\n}\' -H "Content-Type: application/json" -X POST "<api endpoint>"\n')),Object(i.b)("h3",{id:"output-1"},"Output"),Object(i.b)("p",null,"Map ",Object(i.b)("inlineCode",{parentName:"p"},"SSN addreess")," -> Map ",Object(i.b)("inlineCode",{parentName:"p"},"delegator address")," ",Object(i.b)("inlineCode",{parentName:"p"},"stake deposit amount")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"<ssn address>":{"<delegator address>":"<stake deposit amount>"}}\n')),Object(i.b)("h2",{id:"getting-the-delegators-buffered-deposit"},"Getting the Delegator's Buffered Deposit"),Object(i.b)("h3",{id:"inputs-2"},"Inputs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Address of ",Object(i.b)("inlineCode",{parentName:"li"},"ssnlist")," smart contract"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"buff_deposit_deleg")),Object(i.b)("li",{parentName:"ul"},"Address of delegator")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl -d \'{\n>     "id": "1",\n>     "jsonrpc": "2.0",\n>     "method": "GetSmartContractSubState",\n>     "params": ["<ssnlist contract address>","buff_deposit_deleg",["0x<address of delegator>"]]\n> }\' -H "Content-Type: application/json" -X POST "<api endpoint>"\n')),Object(i.b)("h3",{id:"output-2"},"Output"),Object(i.b)("p",null,"Map of ",Object(i.b)("inlineCode",{parentName:"p"},"ssn address")," with the value being a map of ",Object(i.b)("inlineCode",{parentName:"p"},"cycle number")," and the ",Object(i.b)("inlineCode",{parentName:"p"},"buffered deposit")," at that particular ",Object(i.b)("inlineCode",{parentName:"p"},"cycle number")," "),Object(i.b)("p",null,"Map ",Object(i.b)("inlineCode",{parentName:"p"},"SSN address")," -> Map ",Object(i.b)("inlineCode",{parentName:"p"},"Cycle number")," ",Object(i.b)("inlineCode",{parentName:"p"},"buffered deposit amount in Qa")," "),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Cycle number refers to the cycle number of the smart contract when the deposit was submitted to buffered deposit."))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"<ssn address>":{"<cycle number>":"<deposit amount>"}}\n')),Object(i.b)("h2",{id:"getting-the-delegators-stake-amount"},"Getting the Delegator's Stake Amount"),Object(i.b)("h3",{id:"inputs-3"},"Inputs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Address of ",Object(i.b)("inlineCode",{parentName:"li"},"ssnlist")," smart contract"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"deposit_amt_deleg")),Object(i.b)("li",{parentName:"ul"},"Address of ",Object(i.b)("inlineCode",{parentName:"li"},"delegator"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl -d \'{\n>     "id": "1",\n>     "jsonrpc": "2.0",\n>     "method": "GetSmartContractSubState",\n>     "params": ["<ssn contract address>","deposit_amt_deleg",["<delegator address>"]]\n> }\' -H "Content-Type: application/json" -X POST "api endpoint"\n')),Object(i.b)("h3",{id:"output-3"},"Output"),Object(i.b)("p",null,"Map consisting of SSN address and the corresponding delegated amount for a particular delegator"),Object(i.b)("p",null,"Map ",Object(i.b)("inlineCode",{parentName:"p"},"ssn address")," -> ",Object(i.b)("inlineCode",{parentName:"p"},"delegated amount")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"<ssn addr>":"<delegated amount>",\n"<ssn addr>":"<delegated amount>"}\n')),Object(i.b)("h2",{id:"getting-the-delegators-stake-reward"},"Getting the Delegator's Stake Reward"),Object(i.b)("p",null,"Coming soon"),Object(i.b)("h2",{id:"getting-the-delegators-reward-history"},"Getting the Delegator's Reward History"),Object(i.b)("p",null,"Coming soon"),Object(i.b)("h2",{id:"getting-the-delegators-pending-stake-withdrawal-request"},"Getting the Delegator's Pending Stake Withdrawal Request"),Object(i.b)("h3",{id:"inputs-4"},"Inputs"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Address of ",Object(i.b)("inlineCode",{parentName:"li"},"ssnlist")," smart contract"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"withdrawal_pending")),Object(i.b)("li",{parentName:"ul"},"Address of ",Object(i.b)("inlineCode",{parentName:"li"},"delegator"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'curl -d \'{\n    "id": "1",\n    "jsonrpc": "2.0",\n    "method": "GetSmartContractSubState",\n    "params": ["<ssnlist contract address>","withdrawal_pending",["0x<address of delegator>"]]\n}\' -H "Content-Type: application/json" -X POST "<api endpoint>"\n\n')),Object(i.b)("h3",{id:"output-4"},"Output"),Object(i.b)("p",null,"Map consisting of the ",Object(i.b)("inlineCode",{parentName:"p"},"epoch number")," when the withdrawal was initiated and the corresponding ",Object(i.b)("inlineCode",{parentName:"p"},"amount")," to withdraw"),Object(i.b)("p",null,"Map ",Object(i.b)("inlineCode",{parentName:"p"},"epoch number")," -> ",Object(i.b)("inlineCode",{parentName:"p"},"Pending withdrawal amount")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"<epoch number>":"<amount (Qa) to be withdrawn>",\n"<epoch number>":"<amount (Qa) to be withdrawn>"}\n')),Object(i.b)("h2",{id:"getting-delegation-history"},"Getting Delegation History"),Object(i.b)("p",null,"Coming soon "))}d.isMDXComponent=!0},295:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=d(n),u=a,g=b["".concat(s,".").concat(u)]||b[u]||p[u]||i;return n?r.a.createElement(g,o(o({ref:t},c),{},{components:n})):r.a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);