(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{146:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return o}));var a=n(2),i=n(6),l=(n(0),n(295)),r={id:"dev-rentonzilliqa-procedures",title:"Procedures",keywords:["scilla","procedures","rentonzilliqa"],description:"The Procedures of the Scilla Contract for the RentOnZilliqa Application"},b={id:"dev/dev-rentonzilliqa-procedures",isDocsHomePage:!1,title:"Procedures",description:"The Procedures of the Scilla Contract for the RentOnZilliqa Application",source:"@site/docs/dev/dev-rentonzilliqa-procedures.md",permalink:"/docs/dev/dev-rentonzilliqa-procedures",editUrl:"https://github.com/Zilliqa/dev-portal/tree/master/docs/dev/dev-rentonzilliqa-procedures.md",sidebar:"DevelopersSidebar",previous:{title:"Mutable Variables",permalink:"/docs/dev/dev-rentonzilliqa-mutable-variables"},next:{title:"Transitions",permalink:"/docs/dev/dev-rentonzilliqa-transitions"}},c=[{value:"General Procedures",id:"general-procedures",children:[{value:"<code>send_message</code>",id:"send_message",children:[]}]},{value:"Listing Management Procedures",id:"listing-management-procedures",children:[{value:"<code>set_listing_details</code>",id:"set_listing_details",children:[]},{value:"<code>claim_rent_by_id</code>",id:"claim_rent_by_id",children:[]},{value:"<code>delete_listing_by_id</code>",id:"delete_listing_by_id",children:[]}]},{value:"Listing Booking Procedures",id:"listing-booking-procedures",children:[{value:"<code>check_listing_available</code>",id:"check_listing_available",children:[]},{value:"<code>check_amount_and_book</code>",id:"check_amount_and_book",children:[]},{value:"<code>book_listing_by_id</code>",id:"book_listing_by_id",children:[]}]}],d={rightToc:c};function o(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("hr",null),Object(l.b)("p",null,"We proceed to declare the procedures that we will use in the RentOnZilliqa Smart Contract. We will declare the following types of procedures in this section. ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app-rentOnZilliqa/blob/main/src/scilla/RentOnZilliqa.scilla"}),"The source code"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#general-procedures"}),"General Procedures")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#listing-management-procedures"}),"Listing Management Procedures")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#listing-booking-procedures"}),"Listing Booking Procedures"))),Object(l.b)("h2",{id:"general-procedures"},"General Procedures"),Object(l.b)("p",null,"Since we will send messages on multiple occasions in the contract, we create the ",Object(l.b)("inlineCode",{parentName:"p"},"send_message")," procedure to send messages."),Object(l.b)("h3",{id:"send_message"},Object(l.b)("inlineCode",{parentName:"h3"},"send_message")),Object(l.b)("p",null,"This procedure creates a message with the passed arguments. It uses the ",Object(l.b)("inlineCode",{parentName:"p"},"one_msg")," library function to create a list of messages and then proceeds to send it. Note that the ",Object(l.b)("inlineCode",{parentName:"p"},"_recipient")," is always the implicit variable ",Object(l.b)("inlineCode",{parentName:"p"},"_sender"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"amount")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The amount to be sent with the message"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"code")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ",Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"dev-rentonzilliqa-library#message-codes"}),"message code")," to be sent with the message"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Int32"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ocaml"}),'procedure send_message (amount: Uint128, code: Int32)\n  msg = {\n    _tag: "";\n    _recipient: _sender;\n    _amount: amount;\n    code: code\n  };\n  msgs = one_msg msg;\n  send msgs\nend\n')),Object(l.b)("br",null),Object(l.b)("h2",{id:"listing-management-procedures"},"Listing Management Procedures"),Object(l.b)("p",null,"This group of procedures is used in the transitions that a host account user may use to manage their listings."),Object(l.b)("h3",{id:"set_listing_details"},Object(l.b)("inlineCode",{parentName:"h3"},"set_listing_details")),Object(l.b)("p",null,"This procedure creates or updates the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),"Listing Details")," for the given ID. It is used by the ",Object(l.b)("inlineCode",{parentName:"p"},"create_listing")," and ",Object(l.b)("inlineCode",{parentName:"p"},"update_listing")," transitions."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"id")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ID of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"name")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The name of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"description")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The description of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"price")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The price of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"rooms")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The number of rooms in the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint32"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"bathrooms")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The number of bathrooms in the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint32"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"image")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A URL to an image of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"location")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"A ",Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"https://maps.google.com/pluscodes/"}),"Google Maps Plus Code")," for the location of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"wifi")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The availability of WiFi at the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"laundry")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The availability of a Landry at the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"hvac")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The availability of an HVAC at the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"tv")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The availability of a TV at the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"kitchen")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The availability of a Kitchen at the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"String"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ocaml"}),"procedure set_listing_details (\n  id: Uint128, name: String, description: String, price: Uint128,\n  rooms: Uint32, bathrooms: Uint32, image: String, location: String,\n  wifi: String, laundry: String, hvac: String, tv: String, kitchen: String\n)\n  listing_name[id] := name;\n  listing_description[id] := description;\n  listing_price[id] := price;\n  listing_rooms[id] := rooms;\n  listing_bathrooms[id] := bathrooms;\n  listing_image[id] := image;\n  listing_location[id] := location;\n  listing_wifi[id] := wifi;\n  listing_laundry[id] := laundry;\n  listing_hvac[id] := hvac;\n  listing_tv[id] := tv;\n  listing_kitchen[id] := kitchen\nend\n")),Object(l.b)("br",null),Object(l.b)("h3",{id:"claim_rent_by_id"},Object(l.b)("inlineCode",{parentName:"h3"},"claim_rent_by_id")),Object(l.b)("p",null,"This procedure is used in conjunction with the ",Object(l.b)("inlineCode",{parentName:"p"},"claim_rent")," transition. The accumulated rent is checked for the listing with the given ID, in the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_accumulated_rent"))," field. If the rent is missing or empty, the corresponding messages are sent using the ",Object(l.b)("inlineCode",{parentName:"p"},"send_message")," procedure. If there is non-zero accumulated rent, it is sent to the ",Object(l.b)("inlineCode",{parentName:"p"},"_sender")," using the ",Object(l.b)("inlineCode",{parentName:"p"},"send_message")," procedure. The accumulated rent is passed as an argument to ",Object(l.b)("inlineCode",{parentName:"p"},"send_message"),", along with the ",Object(l.b)("inlineCode",{parentName:"p"},"rent_claimed"),' message code. A "Rent Claimed" event is also emitted. The accumulated rent in the ',Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_accumulated_rent"))," field is set to zero for that ID, as it is claimed by the host account."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"id")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ID of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ocaml"}),'procedure claim_rent_by_id (id: Uint128)\n  accumulated_rent <- listing_accumulated_rent[id];\n  match accumulated_rent with\n  | Some accumulated_rent =>\n    no_accumulated_rent = builtin eq accumulated_rent zero;\n    match no_accumulated_rent with\n    | True =>\n      send_message zero rent_empty\n    | False =>\n      listing_accumulated_rent[id] := zero;\n      e = { _eventname: "RentClaimed"; listing_id: id; renter: _sender; amount: accumulated_rent };\n      event e;\n      send_message accumulated_rent rent_claimed\n    end\n  | None =>\n    send_message zero listing_details_missing\n  end\nend\n')),Object(l.b)("br",null),Object(l.b)("h3",{id:"delete_listing_by_id"},Object(l.b)("inlineCode",{parentName:"h3"},"delete_listing_by_id")),Object(l.b)("p",null,"This procedure is used in conjunction with the ",Object(l.b)("inlineCode",{parentName:"p"},"delete_listing")," transition. It deletes the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),"Listing Details")," entries for the listing with the given ID."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"id")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ID of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ocaml"}),"procedure delete_listing_by_id (id: Uint128)\n  delete listing_name[id];\n  delete listing_description[id];\n  delete listing_price[id];\n  delete listing_rooms[id];\n  delete listing_image[id];\n  delete listing_host[id];\n  delete listing_renter[id];\n  delete listing_rented_till[id];\n  delete listing_accumulated_rent[id];\n  delete listing_bathrooms[id];\n  delete listing_location[id];\n  delete listing_wifi[id];\n  delete listing_laundry[id];\n  delete listing_hvac[id];\n  delete listing_tv[id];\n  delete listing_kitchen[id]\nend\n")),Object(l.b)("br",null),Object(l.b)("h2",{id:"listing-booking-procedures"},"Listing Booking Procedures"),Object(l.b)("br",null),Object(l.b)("h3",{id:"check_listing_available"},Object(l.b)("inlineCode",{parentName:"h3"},"check_listing_available")),Object(l.b)("p",null,"This procedure is used in conjunction with the ",Object(l.b)("inlineCode",{parentName:"p"},"book_listing")," transition. It checks if the listing is available by checking the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_rented_till"))," field. If it is not available, the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-library#renter-account-codes"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_unavailable"))," message is sent back. When the listing is available, the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#check_amount_and_book"}),Object(l.b)("inlineCode",{parentName:"a"},"check_amount_and_book"))," procedure is called with the ",Object(l.b)("inlineCode",{parentName:"p"},"id"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"id")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ID of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ocaml"}),"procedure check_listing_available (id: Uint128)\n  current_block_number <- & BLOCKNUMBER;\n  listing_rented_till_value <- listing_rented_till[id];\n  match listing_rented_till_value with\n  | Some listing_rented_till_value =>\n    is_rented_lt = builtin blt current_block_number listing_rented_till_value;\n    is_rented_eq = builtin eq current_block_number listing_rented_till_value;\n    listing_is_rented_check = orb is_rented_lt is_rented_eq;\n    match listing_is_rented_check with\n    | True =>\n      send_message zero listing_unavailable\n    | False =>\n      check_amount_and_book id\n    end\n  | None =>\n    send_message zero listing_details_missing\n  end\nend\n")),Object(l.b)("br",null),Object(l.b)("h3",{id:"check_amount_and_book"},Object(l.b)("inlineCode",{parentName:"h3"},"check_amount_and_book")),Object(l.b)("p",null,"This procedure is used in conjunction with the ",Object(l.b)("inlineCode",{parentName:"p"},"book_listing")," transition. It is called after the listing's availibility is checked by the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#check_listing_available"}),Object(l.b)("inlineCode",{parentName:"a"},"check_listing_available"))," procedure. It checks if the sent amount is equal to the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_price")),". If not, the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-library#renter-account-codes"}),Object(l.b)("inlineCode",{parentName:"a"},"wrong_amount_sent"))," is sent back. If the correct amount is sent, the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#book_listing_by_id"}),Object(l.b)("inlineCode",{parentName:"a"},"book_listing_by_id"))," procedure is called with the ",Object(l.b)("inlineCode",{parentName:"p"},"id"),"."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"id")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ID of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ocaml"}),"procedure check_amount_and_book (id: Uint128)\n  listing_price_value <- listing_price[id];\n  match listing_price_value with\n  | Some listing_price_value =>\n    correct_amount_check = builtin eq _amount listing_price_value;\n    match correct_amount_check with\n    | True =>\n      book_listing_by_id id\n    | False =>\n      send_message zero wrong_amount_sent\n    end\n  | None =>\n    send_message zero listing_details_missing\n  end\nend\n")),Object(l.b)("br",null),Object(l.b)("h3",{id:"book_listing_by_id"},Object(l.b)("inlineCode",{parentName:"h3"},"book_listing_by_id")),Object(l.b)("p",null,"This procedure is used in conjunction with the ",Object(l.b)("inlineCode",{parentName:"p"},"book_listing")," transition. In this procedure, the ",Object(l.b)("inlineCode",{parentName:"p"},"accept")," command is called. The ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#owner-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"night_duration"))," is added to the current ",Object(l.b)("inlineCode",{parentName:"p"},"BLOCKNUMBER")," and assigned to the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_rented_till"))," field. The ",Object(l.b)("inlineCode",{parentName:"p"},"_sender")," wallet address is assigned to the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_renter"))," field. The rent amount is added to the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#listing-details-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_accumulated_rent"))," field, after subtracting the commission set in the ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-mutable-variables#owner-fields"}),Object(l.b)("inlineCode",{parentName:"a"},"owners_commission")),' field. A "ListingBooked" event is emitted and a ',Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"dev-rentonzilliqa-library#renter-account-codes"}),Object(l.b)("inlineCode",{parentName:"a"},"listing_booked"))," message is sent."),Object(l.b)("p",null,"As the commission amount is stored in the contract balance, it can be claimed by the contract owner via the ",Object(l.b)("inlineCode",{parentName:"p"},"_balance")," implicit variable."),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Arguments"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"id")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The ID of the listing"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"Uint128"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ocaml"}),'procedure book_listing_by_id (id: Uint128)\n  accumulated_rent <- listing_accumulated_rent[id];\n  match accumulated_rent with\n  | Some accumulated_rent =>\n    accept;\n    current_block_number <- & BLOCKNUMBER;\n    night_duration_value <- night_duration;\n    rented_till = builtin badd current_block_number night_duration_value;\n    listing_rented_till[id] := rented_till;\n    listing_renter[id] := _sender;\n    commission <- owners_commission;\n    rent = builtin sub _amount commission;\n    new_accumulated_rent = builtin add accumulated_rent rent;\n    listing_accumulated_rent[id] := new_accumulated_rent;\n    e = { _eventname: "ListingBooked"; listing_id: id; renter: _sender; amount: _amount };\n    event e;\n    send_message zero listing_booked\n  | None =>\n    send_message zero listing_details_missing\n  end\nend\n')))}o.isMDXComponent=!0},295:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=i.a.createContext({}),o=function(e){var t=i.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},s=function(e){var t=o(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),s=o(n),p=a,u=s["".concat(r,".").concat(p)]||s[p]||m[p]||l;return n?i.a.createElement(u,b(b({ref:t},d),{},{components:n})):i.a.createElement(u,b({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=p;var b={};for(var c in t)hasOwnProperty.call(t,c)&&(b[c]=t[c]);b.originalType=e,b.mdxType="string"==typeof e?e:a,r[1]=b;for(var d=2;d<l;d++)r[d]=n[d];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);