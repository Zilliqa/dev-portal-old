(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{162:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),a=(n(0),n(295)),c={id:"rosetta-construction",title:"Introduction",keywords:["rosetta","middleware","exchanges","zilliqa","API","contruction"],description:"Introduction"},i={id:"exchanges/rosetta-construction",isDocsHomePage:!1,title:"Introduction",description:"Introduction",source:"@site/docs/exchanges/rosetta-construction.md",permalink:"/docs/exchanges/rosetta-construction",editUrl:"https://github.com/Zilliqa/dev-portal/tree/master/docs/exchanges/rosetta-construction.md",sidebar:"ExchangesSidebar",previous:{title:"Transaction",permalink:"/docs/exchanges/rosetta-data-block-transaction"},next:{title:"Derive",permalink:"/docs/exchanges/rosetta-construction-derive"}},s=[{value:"Construction",id:"construction",children:[{value:"Construction Flow",id:"construction-flow",children:[]},{value:"Flow of Operations",id:"flow-of-operations",children:[]}]}],l={rightToc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("hr",null),Object(a.b)("h2",{id:"construction"},"Construction"),Object(a.b)("p",null,"Construction API enables developers to write to a blockchain (i.e. construct transactions) in a standard format. Implementations are stateless and can operate entirely offline, and support detached key generation and signing."),Object(a.b)("h3",{id:"construction-flow"},"Construction Flow"),Object(a.b)("p",null,"The construction flow is in this sequence:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-derive"}),"/construction/derive")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-preprocess"}),"/construction/preprocess")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-metadata"}),"/construction/metadata")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-payload"}),"/construction/payloads")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-parse"}),"/construction/parse")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-combine"}),"/construction/combine")),Object(a.b)("li",{parentName:"ol"},"/construction/parse (to confirm correctness)"),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-hash"}),"/construction/hash")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"rosetta-construction-hash"}),"/construction/submit"))),Object(a.b)("h3",{id:"flow-of-operations"},"Flow of Operations"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"                               Caller (i.e. Coinbase)                + Construction API Implementation\n                              +-------------------------------------------------------------------------------------------+\n                                                                     |\n                               Derive Address   +----------------------------\x3e /construction/derive\n                               from Public Key                       |\n                                                                     |\n                             X                                       |\n                             X Create Metadata Request +---------------------\x3e /construction/preprocess\n                             X (array of operations)                 |                    +\n    Get metadata needed      X                                       |                    |\n    to construct transaction X            +-----------------------------------------------+\n                             X            v                          |\n                             X Fetch Online Metadata +-----------------------\x3e /construction/metadata (online)\n                             X                                       |\n                                                                     |\n                             X                                       |\n                             X Construct Payloads to Sign +------------------\x3e /construction/payloads\n                             X (array of operations)                 |                   +\n                             X                                       |                   |\n Create unsigned transaction X          +------------------------------------------------+\n                             X          v                            |\n                             X Parse Unsigned Transaction +------------------\x3e /construction/parse\n                             X to Confirm Correctness                |\n                             X                                       |\n                                                                     |\n                             X                                       |\n                             X Sign Payload(s) +-----------------------------\x3e /construction/combine\n                             X (using caller's own detached signer)  |                 +\n                             X                                       |                 |\n   Create signed transaction X         +-----------------------------------------------+\n                             X         v                             |\n                             X Parse Signed Transaction +--------------------\x3e /construction/parse\n                             X to Confirm Correctness                |\n                             X                                       |\n                                                                     |\n                             X                                       |\n                             X Get hash of signed transaction +--------------\x3e /construction/hash\nBroadcast Signed Transaction X to monitor status                     |\n                             X                                       |\n                             X Submit Transaction +--------------------------\x3e /construction/submit (online)\n                             X                                       |\n                                                                     +\n")))}u.isMDXComponent=!0},295:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(c,".").concat(d)]||p[d]||b[d]||a;return n?o.a.createElement(m,i(i({ref:t},l),{},{components:n})):o.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);