(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{193:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return r})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var o=t(2),a=t(6),i=(t(0),t(296)),c={id:"dev-rentonzilliqa-components",title:"Components",keywords:["react","rentonzilliqa","components","frontend"],description:"Creating the React Components for the RentOnZilliqa frontend application"},r={id:"dev/dev-rentonzilliqa-components",isDocsHomePage:!1,title:"Components",description:"Creating the React Components for the RentOnZilliqa frontend application",source:"@site/docs/dev/dev-rentonzilliqa-components.md",permalink:"/docs/dev/dev-rentonzilliqa-components",editUrl:"https://github.com/Zilliqa/dev-portal/tree/master/docs/dev/dev-rentonzilliqa-components.md",sidebar:"DevelopersSidebar",previous:{title:"Introduction to the frontend",permalink:"/docs/dev/dev-rentonzilliqa-frontend"},next:{title:"Scripting",permalink:"/docs/dev/dev-rentonzilliqa-scripting"}},l=[{value:"General Components",id:"general-components",children:[{value:"Button",id:"button",children:[]},{value:"Header",id:"header",children:[]},{value:"Modal",id:"modal",children:[]},{value:"ListingCard",id:"listingcard",children:[]}]},{value:"Form Components",id:"form-components",children:[{value:"Input",id:"input",children:[]},{value:"CheckBox",id:"checkbox",children:[]},{value:"AmenitiesInput",id:"amenitiesinput",children:[]}]},{value:"SVG Components",id:"svg-components",children:[{value:"Tick",id:"tick",children:[]},{value:"Listing Icons",id:"listing-icons",children:[]}]}],s={rightToc:l};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("hr",null),Object(i.b)("p",null,"In this section, we will build all the components that will be used on the frontend application."),Object(i.b)("h2",{id:"general-components"},"General Components"),Object(i.b)("h3",{id:"button"},"Button"),Object(i.b)("p",null,"We start with a basic Button component in ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentButton.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentButton.tsx"))," with a bunch of options for modifying it based on the usage."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),"import React from 'react';\n\ntype props = {\n  text: string;\n  onClick(e: any): void;\n  white?: boolean;\n  header?: boolean;\n  modal?: boolean;\n  padding?: boolean;\n  alert?: boolean;\n};\n\nconst Button: React.FC<props> = (props) => {\n  const {\n    text,\n    white = false,\n    modal = false,\n    onClick,\n    padding = false,\n    alert = false,\n  } = props;\n  const colours = white\n    ? 'text-gray-900 bg-white'\n    : alert\n    ? 'text-white bg-red-600'\n    : 'text-white bg-gray-900';\n\n  return (\n    <button\n      className={`font-medium py-3 text-sm lg:text-base rounded-button shadow-button ${colours} ${\n        modal ? 'w-full lg:text-base' : 'px-3 lg:px-6'\n      } ${padding ? 'mb-10' : ''}`}\n      {...{ onClick }}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n")),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentButton.tsx"}),"/src/components/componentButton.tsx")),Object(i.b)("br",null),Object(i.b)("h3",{id:"header"},"Header"),Object(i.b)("p",null,"We then create a Header component in ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentHeader.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentHeader.tsx"))," to be used on all pages."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from './componentButton';\n\ntype props = {\n  setShowSignUp(showSignUp: boolean): void;\n};\n\nconst Header: React.FC<props> = (props) => {\n  const { setShowSignUp } = props;\n\n  return (\n    <header className=\"bg-gray-900 sticky top-0 z-10\">\n      <div className=\"container mx-auto px-4 lg:px-2 py-3 flex justify-between items-center\">\n        <Link\n          className=\"text-white text-2xl font-medium cursor-pointer\"\n          to=\"/listings\"\n        >\n          RentOnZilliqa\n        </Link>\n        <Button\n          text={'Create Account'}\n          onClick={() => setShowSignUp(true)}\n          white\n          header\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n")),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentHeader.tsx"}),"/src/components/componentHeader.tsx")),Object(i.b)("br",null),Object(i.b)("h3",{id:"modal"},"Modal"),Object(i.b)("p",null,"We create a Modal component at ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentModal.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentModal.tsx")),". Most transitions take place via a modal. This component takes care of the basic Modal functionality and styling."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"title"),"; main button set to ",Object(i.b)("inlineCode",{parentName:"p"},"buttonText"),"; dismiss button; and overlay are part of this component."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"children")," passed to this component are the content in the modal."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"onClick")," function will be called when the main button is clicked."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useEffect } from \'react\';\nimport Button from \'./componentButton\';\n\ntype props = {\n  title: string;\n  children: JSX.Element | JSX.Element[];\n  setVisible(visible: boolean): void;\n  visible: boolean;\n  buttonText: string;\n  onClick(): void;\n};\n\nconst Modal: React.FC<props> = (props) => {\n  const { title, children, setVisible, visible, buttonText, onClick } = props;\n\n  useEffect(() => {\n    document.onkeydown = (event: KeyboardEvent) => {\n      if (event.key === \'Enter\') {\n        event.preventDefault();\n        onClick();\n      }\n    };\n  }, []);\n\n  return (\n    <div\n      className={\n        \'w-screen h-screen bg-black bg-opacity-25 fixed top-0 left-0 z-20 transition-all\'\n      }\n      style={\n        visible\n          ? {\n              opacity: 1,\n              visibility: \'visible\',\n              transform: \'translateY(0)\',\n            }\n          : {\n              opacity: 0,\n              visibility: \'hidden\',\n              transform: \'translateY(30px)\',\n            }\n      }\n      onClick={() => setVisible(false)}\n    >\n      <div className="w-full h-full flex justify-center items-center px-4 lg:px-2 py-2">\n        <div\n          className="w-full lg:w-1/3 bg-white shadow-xl rounded-2xl max-h-full flex flex-col"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <div className="flex justify-between items-center p-8">\n            <p className="text-xl font-bold text-gray-900">{title}</p>\n            <button\n              className="p-1 rounded hover:bg-gray-100 transition-colors -mr-1"\n              onClick={() => setVisible(false)}\n            >\n              <svg\n                className="w-6 h-6 text-gray-700"\n                fill="none"\n                stroke="currentColor"\n                viewBox="0 0 24 24"\n                xmlns="http://www.w3.org/2000/svg"\n              >\n                <path\n                  strokeLinecap="round"\n                  strokeLinejoin="round"\n                  strokeWidth={2}\n                  d="M6 18L18 6M6 6l12 12"\n                />\n              </svg>\n            </button>\n          </div>\n\n          <div className="w-full px-8 pt-0 overflow-y-scroll flex-grow">\n            {children}\n          </div>\n          <div className="p-8">\n            <Button\n              modal\n              text={buttonText}\n              onClick={(e: any) => {\n                onClick();\n                setVisible(false);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n')),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentModal.tsx"}),"/src/components/componentModal.tsx")),Object(i.b)("br",null),Object(i.b)("h3",{id:"listingcard"},"ListingCard"),Object(i.b)("p",null,"We create a ListingCard component at ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentListingCard.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentListingCard.tsx")),". This component creates the listing card used on the listings page."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),'import React from \'react\';\n\ntype props = {\n  id: string;\n  name: string;\n  price: string | number;\n  rooms: string | number;\n  bathrooms: string | number;\n  image: string;\n  renter: string | undefined;\n  rented_till: string;\n  accumulated_rent: string;\n  rented: boolean;\n  user_is_host: boolean;\n  onClick(): void;\n};\n\nconst ListingCard: React.FC<props> = (props) => {\n  const { name, price, rooms, bathrooms, image, rented, onClick } = props;\n  return (\n    <div className="w-full rounded-2xl cursor-pointer" onClick={onClick}>\n      <div\n        className="w-full h-48 rounded-lg mb-4 bg-gray-100 flex justify-end items-start p-2"\n        style={{\n          backgroundImage: `url(${image})`,\n          backgroundSize: \'cover\',\n        }}\n      >\n        {rented && (\n          <div>\n            <div className="px-2 py-1 bg-gray-200 text-gray-600 rounded uppercase text-xs tracking-wide font-semibold">\n              Unavailable\n            </div>\n          </div>\n        )}\n      </div>\n      <div className="flex items-center text-base font-light text-gray-600">\n        <p>\n          {rooms} Room{rooms > 1 ? \'s\' : \'\'}\n        </p>\n        <div className="w-1 h-1 bg-gray-500 rounded-full mx-2"></div>\n        <p>\n          {bathrooms} Bathroom{bathrooms > 1 ? \'s\' : \'\'}\n        </p>\n      </div>\n      <h3 className="text-gray-900 text-xl">{name}</h3>\n      <p className="text-gray-900 font-semibold">\n        {price} ZIL\n        <span className="text-gray-600 font-light"> / night</span>\n      </p>\n    </div>\n  );\n};\n\nexport default ListingCard;\n')),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentListingCard.tsx"}),"/src/components/componentListingCard.tsx")),Object(i.b)("br",null),Object(i.b)("h2",{id:"form-components"},"Form Components"),Object(i.b)("h3",{id:"input"},"Input"),Object(i.b)("p",null,"We create an Input component at ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentInput.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentInput.tsx")),". This works with state variables which will be created with the ",Object(i.b)("inlineCode",{parentName:"p"},"useState")," hook in its Parent Component. We accept the ",Object(i.b)("inlineCode",{parentName:"p"},"name")," for the input field. The input ",Object(i.b)("inlineCode",{parentName:"p"},"type")," and ",Object(i.b)("inlineCode",{parentName:"p"},"unit")," are also accepted as optional props."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),"import React from 'react';\n\ntype props = {\n  name: string;\n  unit?: string;\n  value?: string;\n  setValue(value: string): void;\n  type?: string;\n};\n\nconst Input: React.FC<props> = (props) => {\n  const { name, unit = '', value = '', setValue, type = 'text' } = props;\n\n  return (\n    <div className=\"\">\n      <div className=\"flex justify-between items-center py-2 text-xs tracking-wide uppercase\">\n        <h4 className=\"font-semibold text-gray-500\">{name}</h4>\n        <p className=\"font-medium text-gray-400\">{unit}</p>\n      </div>\n      <input\n        className=\"w-full mb-6 border-2 border-gray-300 focus:border-gray-900 rounded-button outline-none text-gray-900 lg:text-lg px-4 py-3\"\n        placeholder={name}\n        type={'text'}\n        inputMode={type === 'number' ? 'decimal' : 'text'}\n        min={type === 'number' ? 1 : undefined}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      ></input>\n    </div>\n  );\n};\n\nexport default Input;\n")),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentInput.tsx"}),"/src/components/componentInput.tsx")),Object(i.b)("br",null),Object(i.b)("h3",{id:"checkbox"},"CheckBox"),Object(i.b)("p",null,"We create a CheckBox component at ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentCheckBox.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentCheckBox.tsx")),". This component is used within the modals. The CreateAccount modal uses it for user role selection. It is also used for selecting amenities in the CreateListing and ManageListing Modals."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),"import React from 'react';\nimport Tick from './componentTick';\n\ntype props = {\n  checked: boolean;\n  setChecked(checked: boolean): void;\n  children: any;\n  name: String;\n};\n\nconst CheckBox: React.FC<props> = (props) => {\n  const { checked, setChecked, children, name } = props;\n  return (\n    <>\n      <div\n        className=\"flex justify-between items-center cursor-pointer mt-3\"\n        onClick={() => setChecked(!checked)}\n      >\n        <div className=\"flex items-center\">\n          {children}\n          <p className=\"text-lg text-gray-800 pl-4\">{name}</p>\n        </div>\n        <div\n          className={`p-1 bg-gray-200 rounded-lg w-8 h-8 hover:scale-95 transform transition-all ${\n            checked ? '' : 'hover:bg-gray-300'\n          }`}\n        >\n          <div\n            className={`w-full h-full rounded transition-colors text-transparent ${\n              checked ? 'bg-gray-900 text-white' : ''\n            }`}\n          >\n            {checked && <Tick />}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CheckBox;\n")),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentCheckBox.tsx"}),"/src/components/componentCheckBox.tsx")),Object(i.b)("br",null),Object(i.b)("h3",{id:"amenitiesinput"},"AmenitiesInput"),Object(i.b)("p",null,"We create an AmenitiesInput component at ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentAmenitiesInput.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentAmenitiesInput.tsx")),". It groups multiple checkboxes for collecting the amenities' availability in the CreateListing and ManageListing modals. We create this component to clean up the code."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),'import React, { useEffect, useState } from \'react\';\nimport {\n  HvacIcon,\n  KitchenIcon,\n  LaundryIcon,\n  TvIcon,\n  WifiIcon,\n} from \'./componentListingIcons\';\nimport CheckBox from \'./componentCheckBox\';\n\ntype props = {\n  wifi: boolean;\n  setWifi(wifi: boolean): void;\n  kitchen: boolean;\n  setKitchen(kitchen: boolean): void;\n  tv: boolean;\n  setTv(tv: boolean): void;\n  laundry: boolean;\n  setLaundry(laundry: boolean): void;\n  hvac: boolean;\n  setHvac(hvac: boolean): void;\n};\n\nconst AmenitiesInput: React.FC<props> = (props) => {\n  const {\n    wifi,\n    setWifi,\n    kitchen,\n    setKitchen,\n    tv,\n    setTv,\n    laundry,\n    setLaundry,\n    hvac,\n    setHvac,\n  } = props;\n  const [selectAll, setSelectAll] = useState(true);\n\n  useEffect(() => {\n    setSelectAll(!(wifi || kitchen || tv || laundry || hvac));\n  }, [wifi, kitchen, tv, laundry, hvac]);\n\n  const setAll = (value: boolean) => {\n    setWifi(value);\n    setKitchen(value);\n    setTv(value);\n    setLaundry(value);\n    setHvac(value);\n  };\n\n  return (\n    <>\n      <div className="flex justify-between text-xs font-semibold text-gray-500 tracking-wide uppercase py-4">\n        <h4>Amenities</h4>\n        <p\n          className="font-medium text-gray-400 cursor-pointer hover:text-gray-500 transition-colors"\n          onClick={() => setAll(selectAll)}\n        >\n          {selectAll ? \'Select All\' : \'Select None\'}\n        </p>\n      </div>\n      <CheckBox name="WiFi" checked={wifi} setChecked={setWifi}>\n        <WifiIcon />\n      </CheckBox>\n      <CheckBox name="Kitchen" checked={kitchen} setChecked={setKitchen}>\n        <KitchenIcon />\n      </CheckBox>\n      <CheckBox name="Television" checked={tv} setChecked={setTv}>\n        <TvIcon />\n      </CheckBox>\n      <CheckBox name="Laundry" checked={laundry} setChecked={setLaundry}>\n        <LaundryIcon />\n      </CheckBox>\n      <CheckBox name="HVAC" checked={hvac} setChecked={setHvac}>\n        <HvacIcon />\n      </CheckBox>\n    </>\n  );\n};\n\nexport default AmenitiesInput;\n')),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentAmenitiesInput.tsx"}),"/src/components/componentAmenitiesInput.tsx")),Object(i.b)("br",null),Object(i.b)("h2",{id:"svg-components"},"SVG Components"),Object(i.b)("h3",{id:"tick"},"Tick"),Object(i.b)("p",null,"This Tick component at ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentTick.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentTick.tsx"))," is used to make the SVG easily available for the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"#checkbox"}),"CheckBox")," component."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-tsx"}),'import React from \'react\';\n\nconst Tick: React.FC = () => {\n  return (\n    <div className="w-full h-full grid place-items-center">\n      <svg\n        className="w-4 h-4"\n        fill="none"\n        stroke="currentColor"\n        viewBox="0 0 24 24"\n        xmlns="http://www.w3.org/2000/svg"\n      >\n        <path\n          strokeLinecap="round"\n          strokeLinejoin="round"\n          strokeWidth={4}\n          d="M5 13l4 4L19 7"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Tick;\n')),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentTick.tsx"}),"/src/components/componentTick.tsx")),Object(i.b)("br",null),Object(i.b)("h3",{id:"listing-icons"},"Listing Icons"),Object(i.b)("p",null,"This ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Quinence/zilliqa-fullstack-app/blob/main/src/components/componentListingIcons.tsx"}),Object(i.b)("inlineCode",{parentName:"a"},"/src/components/componentListingIcons.tsx"))," file contains several SVG components for use on the listing page as well as the listing management modals."),Object(i.b)("p",null,"It includes icons for:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Wifi")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Kitchen")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"TV")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Laundry")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"HVAC")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Bedroom")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Bathroom"))))}p.isMDXComponent=!0},296:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return d}));var o=t(0),a=t.n(o);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),p=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},b=function(e){var n=p(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(t),u=o,d=b["".concat(c,".").concat(u)]||b[u]||m[u]||i;return t?a.a.createElement(d,r(r({ref:n},s),{},{components:t})):a.a.createElement(d,r({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=u;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,c[1]=r;for(var s=2;s<i;s++)c[s]=t[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);