(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{227:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return b}));var n=a(2),i=a(6),r=(a(0),a(296)),l={id:"rosetta-setting-up-seed-node",title:"Setting up Zilliqa Rosetta with Seed node",keywords:["rosetta","middleware","exchanges","zilliqa","rosetta","setup","seed","node"],description:"Setting up Zilliqa Rosetta with Seed node"},o={id:"exchanges/rosetta-setting-up-seed-node",isDocsHomePage:!1,title:"Setting up Zilliqa Rosetta with Seed node",description:"Setting up Zilliqa Rosetta with Seed node",source:"@site/docs/exchanges/rosetta-setting-up-seed-node.md",permalink:"/docs/exchanges/rosetta-setting-up-seed-node",editUrl:"https://github.com/Zilliqa/dev-portal/tree/master/docs/exchanges/rosetta-setting-up-seed-node.md",sidebar:"ExchangesSidebar",previous:{title:"Unsupported Rosetta API",permalink:"/docs/exchanges/rosetta-unsupported-api"},next:{title:"Setting up Zilliqa Rosetta connecting to public API endpoint",permalink:"/docs/exchanges/rosetta-setting-up-no-seed-node"}},c=[{value:"Setup",id:"setup",children:[{value:"Step 1: Download <code>Zilliqa-rosetta</code> latest release from https://github.com/Zilliqa/zilliqa-rosetta/releases.",id:"step-1-download-zilliqa-rosetta-latest-release-from-httpsgithubcomzilliqazilliqa-rosettareleases",children:[]},{value:"Step 2: Build <code>Zilliqa-rosetta</code> Docker image from Zilliqa and Scilla source code",id:"step-2-build-zilliqa-rosetta-docker-image-from-zilliqa-and-scilla-source-code",children:[]},{value:"Step 3: Create <code>config.yaml</code> for <code>Zilliqa-rosetta</code>. We have also provided a sample of testnet and mainnet configuration.",id:"step-3-create-configyaml-for-zilliqa-rosetta-we-have-also-provided-a-sample-of-testnet-and-mainnet-configuration",children:[]},{value:"Step 4: Generation of keypair for whitelisting (only for public key whitelisting method)",id:"step-4-generation-of-keypair-for-whitelisting-only-for-public-key-whitelisting-method",children:[]},{value:"Step 5:Running <code>Zilliqa-rosetta</code>",id:"step-5running-zilliqa-rosetta",children:[]}]},{value:"Maintanance",id:"maintanance",children:[{value:"Restarting Zilliqa Rosetta",id:"restarting-zilliqa-rosetta",children:[]}]}],s={rightToc:c};function b(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("hr",null),Object(r.b)("h2",{id:"setup"},"Setup"),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Please note that whitelisting will be required for operating a Zilliqa seed node. Currently, whitelisting is granted on a case by case basis and usually for reason such as supporting exchange infrastracture."))),Object(r.b)("h3",{id:"step-1-download-zilliqa-rosetta-latest-release-from-httpsgithubcomzilliqazilliqa-rosettareleases"},"Step 1: Download ",Object(r.b)("inlineCode",{parentName:"h3"},"Zilliqa-rosetta")," latest release from ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"https://github.com/Zilliqa/zilliqa-rosetta/releases"}),"https://github.com/Zilliqa/zilliqa-rosetta/releases"),"."),Object(r.b)("h3",{id:"step-2-build-zilliqa-rosetta-docker-image-from-zilliqa-and-scilla-source-code"},"Step 2: Build ",Object(r.b)("inlineCode",{parentName:"h3"},"Zilliqa-rosetta")," Docker image from Zilliqa and Scilla source code"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sh ./build_docker.sh\n")),Object(r.b)("p",null,"If you need to build ",Object(r.b)("inlineCode",{parentName:"p"},"Zilliqa-rosetta")," with a specific Zilliqa and Scilla version, you can using the following"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker build \\\n--build-arg ROSETTA_COMMIT_OR_TAG=<ROSETTA_TAG> \\\n--build-arg SCILLA_COMMIT_OR_TAG=<SCILLA_TAG> \\\n--build-arg COMMIT_OR_TAG=<ZILLIQA_TAG> \\\n-t rosetta:1.0 .\n")),Object(r.b)("p",null,"Please note compiling Zilliqa and Scilla may take some time."),Object(r.b)("h3",{id:"step-3-create-configyaml-for-zilliqa-rosetta-we-have-also-provided-a-sample-of-testnet-and-mainnet-configuration"},"Step 3: Create ",Object(r.b)("inlineCode",{parentName:"h3"},"config.yaml")," for ",Object(r.b)("inlineCode",{parentName:"h3"},"Zilliqa-rosetta"),". We have also provided a sample of ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"https://github.com/Zilliqa/zilliqa-rosetta/blob/master/testnet.config.local.yaml"}),"testnet")," and ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"https://github.com/Zilliqa/zilliqa-rosetta/blob/master/mainnet.config.local.yaml"}),"mainnet")," configuration."),Object(r.b)("h3",{id:"step-4-generation-of-keypair-for-whitelisting-only-for-public-key-whitelisting-method"},"Step 4: Generation of keypair for whitelisting (only for public key whitelisting method)"),Object(r.b)("p",null,"If you are using public key whtielisting method and wish to generate a keypair, you can do the following"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'mkdir secrets\n\ndocker run --rm \\\n--env GENKEYPAIR="true" \\\nrosetta:1.0 > secrets/mykey.txt\n')),Object(r.b)("p",null,"Remember to inform the Zilliqa team of your public key for whitelisting purpose"),Object(r.b)("h3",{id:"step-5running-zilliqa-rosetta"},"Step 5:Running ",Object(r.b)("inlineCode",{parentName:"h3"},"Zilliqa-rosetta")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'docker run -d \\\n--env BLOCKCHAIN_NETWORK="<NETWORK_TO_USE>" \\\n--env IP_ADDRESS="<SEED_NODE_HOST_IP>" \\\n--env MULTIPLIER_SYNC="<Y_or_N>" \\\n--env SEED_PRIVATE_KEY="<SEED_PRIVATE_KEY>" \\\n--env TESTNET_NAME="<NAME_OF_THE_TESTNET>" \\\n--env BUCKET_NAME="<NAME_OF_THE_PERSISTENCE_BUCKET>" \\\n-v $(pwd)/secrets/mykey.txt:/run/zilliqa/mykey.txt \\\n-p 4201:4201 -p 4301:4301 -p 4501:4501 -p 33133:33133 -p 8080:8080 \\\n--name rosetta rosetta:1.0\n')),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Variable"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"NETWORK_TO_USE")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"testnet")," or ",Object(r.b)("inlineCode",{parentName:"td"},"mainnet"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"SEED_NODE_HOST_IP")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Public IP for Zilliqa seed node")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"SEED_PRIVATE_KEY")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"prviate key of the whitelisted keypair. Optional field")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"NAME_OF_THE_TESTNET")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Refer to ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/Zilliqa/zilliqa-rosetta/blob/master/network_meta.md"}),Object(r.b)("inlineCode",{parentName:"a"},"network meta")))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"NAME_OF_THE_PERSISTENCE_BUCKET")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Refer to ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/Zilliqa/zilliqa-rosetta/blob/master/network_meta.md"}),Object(r.b)("inlineCode",{parentName:"a"},"network meta")))))),Object(r.b)("h2",{id:"maintanance"},"Maintanance"),Object(r.b)("h3",{id:"restarting-zilliqa-rosetta"},"Restarting Zilliqa Rosetta"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker stop <container name>\ndocker start <container name>\n")))}b.isMDXComponent=!0},296:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=b(a),m=n,u=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return a?i.a.createElement(u,o(o({ref:t},s),{},{components:a})):i.a.createElement(u,o({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);