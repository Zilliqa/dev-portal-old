(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{183:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(296)),o={id:"basics-zil-gas",title:"Gas Accounting",keywords:["gas accounting","gas pricing","contract gas","zilliqa","minimum gas"],description:"Zilliqa Gas"},c={id:"basics/basics-zil-gas",isDocsHomePage:!1,title:"Gas Accounting",description:"Zilliqa Gas",source:"@site/docs/basics/basics-zil-gas.md",permalink:"/docs/basics/basics-zil-gas",editUrl:"https://github.com/Zilliqa/dev-portal/tree/master/docs/basics/basics-zil-gas.md",sidebar:"BasicsSideBar",previous:{title:"Smart Contract Layer",permalink:"/docs/basics/basics-zil-contract"}},s=[{value:"Gas Pricer",id:"gas-pricer",children:[]},{value:"Payment Transactions",id:"payment-transactions",children:[]},{value:"Smart Contract Transactions",id:"smart-contract-transactions",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("hr",null),Object(i.b)("h2",{id:"gas-pricer"},"Gas Pricer"),Object(i.b)("p",null,"Zilliqa's consensus algorithm (i.e., PBFT) requires nodes to vote on each\nblock and hence each transaction therein. Every transaction that goes to the\nnetwork has a gas price -- which is the price (in $ZIL) per gas unit that the\nsender is willing to pay to the miners to process the transaction."),Object(i.b)("p",null,"In order to ensure that miners do not impose a gas price of their own which\ncould make it impossible to agree on transactions, the Zilliqa protocol\nmaintains a ",Object(i.b)("em",{parentName:"p"},"global minimum gas price")," that all miners will accept."),Object(i.b)("p",null,"The network runs an algorithm to compute the acceptable global minimum gas\nprice that the entire network will agree upon. The algorithm takes into\naccount: a) the previous gas prices for the last few epochs b) the minimum\ngas price that each miner is willing to accept for the current epoch and, c)\nnetwork congestion."),Object(i.b)("p",null,"Essentially, the algorithm decides on the gas price depending on the\nnetwork congestion in the last few epochs. The rationale being that if the\nnetwork congestion is high, then the miners get to have a say on the gas\nprice, while if the network is not congested, then the gas price should not\ndepend too much on the proposed gas prices."),Object(i.b)("p",null,"The current global minimum gas price is 0.002 ZIL."),Object(i.b)("h2",{id:"payment-transactions"},"Payment Transactions"),Object(i.b)("p",null,"Each payment transaction consumes 50 gas unit and therefore, the gas to be paid\nfor a payment transaction is 0.1 ZIL."),Object(i.b)("h2",{id:"smart-contract-transactions"},"Smart Contract Transactions"),Object(i.b)("p",null,"As smart contract transactions involve more compute and storage, the gas\nrequired to process a smart contract transaction depends on the complexity of\nthe contract being called, the parameters being passed etc. Scilla comes with\nan in-built gas accounting module that keeps track of gas consumed as the\nScilla interpreter executes a contract."),Object(i.b)("p",null,"Each usage of a Scilla literal, executing an expression and statement in Scilla\nhave a deterministic associated cost. More details can be found the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Zilliqa/scilla-docs/blob/master/docs/texsources/gas-costs/gas-doc.pdf"}),"gas\naccounting documentation")))}p.isMDXComponent=!0},296:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,b=u["".concat(o,".").concat(h)]||u[h]||m[h]||i;return n?r.a.createElement(b,c(c({ref:t},l),{},{components:n})):r.a.createElement(b,c({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);